{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValue","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54340af1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty}) => {\n      const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n      const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n      const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n      const onDownDifficulty = () => onChangeDifficulty(difficulty -1)\n    return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n          <span className=\"navigation-label\">Length: </span>\n          <div className=\"navigation-item-number-container\">\n            <div className=\"num-board\">{length}</div>\n          </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n                className={`difficulty-button difficulty-up ${upVisibility}`}\n                onClick={onUpDifficulty}\n            ></div>\n            <div\n                className={`difficulty-button difficulty-down ${downVisibility}`}\n                onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Navigation","import React from 'react'\n\nconst Field = ({fields}) =>{\n    return(\n        <div className= \"field\">\n        {\n            fields.map((row) => {\n            return row.map((column) => {\n            return <div className={`dots ${column}`}></div>\n            })\n        })\n        }\n        </div>\n    )\n}\n\nexport default Field","import React from 'react';\n\nconst Button = ({status, onStart, onStop, onRestart}) => {\n  return (\n    <div className=\"button\">\n      { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\n      { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\n      { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\n      { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button> }\n    </div>\n  );\n};\n\nexport default Button;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport{\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ManipulationPanel = ({onChange}) =>{\n    const onUp = () => onChange('up')\n    const onRight = () => onChange('right')\n    const onLeft = () => onChange('left')\n    const onDown = () => onChange('down')\n\n\n    return(\n        <div className = 'manipulation-panel'>\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n                <FontAwesomeIcon icon={faArrowLeft} />\n            </button>\n          <div>\n            <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n                <FontAwesomeIcon icon={faArrowUp} />\n            </button>\n            <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n                <FontAwesomeIcon icon={faArrowDown} />\n            </button>\n          </div>\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n                <FontAwesomeIcon icon={faArrowRight} />\n            </button>\n        </div>\n    )\n}\n\nexport default ManipulationPanel","export const getFoodPosition = (fieldSize,excludes) => {\n    while(true){\n        const x = Math.floor(Math.random()* (fieldSize - 1 - 1)) + 1\n        const y = Math.floor(Math.random()* (fieldSize - 1 - 1)) + 1\n        const conflict = excludes.some(item => item.x === x && item.y === y)\n\n        if (!conflict) {\n        return {x,y}\n        }\n    }\n}\n\nexport const initFields = (fieldSize,snake) =>{\n    const fields =[]\n    for(let i=0; i < fieldSize ; i++){\n        const cols =new Array(fieldSize).fill('')\n        fields.push(cols)\n    }\n    fields[snake.y][snake.x]='snake'\n\n    const food = getFoodPosition(fieldSize, [snake])\n    fields[food.y][food.x] = 'food'\n\n\n    return fields\n}","import {useCallback, useState, useEffect} from 'react'\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport {initFields, getFoodPosition} from './utils'\n\nconst initialPosition = {x: 17,y: 17}\nconst initialValue= initFields(35,initialPosition)\nconst defaultInterval = 100\nconst defaultDifficulty = 3\n\nconst Difficulty = [1000,500,100,50,10]\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover',\n});\n\nexport const Direction = Object.freeze({\n   up: 'up',\n   right: 'right',\n   left: 'left',\n   down: 'down'\n})\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37:Direction.left,\n  38:Direction.up,\n  39:Direction.right,\n  40:Direction.down,\n})\n\nconst OppositeDirection = Object.freeze({\n   up: 'down',\n   right: 'left',\n   left: 'right',\n   down: 'up'\n})\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x:  1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n})\n\nlet timer = undefined\n\n// ----------------------------//\n// タイマーを削除させる処理\nconst unsubscribe = () => {\n  if (!timer){\n    return\n  }\n  clearInterval(timer)\n}\n//-----------------------------//\n\nconst isCollision = (fieldSize, position) => {\n  if(position.y < 0 || position.x < 0){\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize -1){\n    return true;\n  }\n\n  return false;\n}\n\nconst isEatingMyself = (fields, position) =>{\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const [fields,setFields] = useState(initialValue)\n  const [body,setBody] =useState([])\n  const [status,setStatus] = useState(GameStatus.init)\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [tick,setTick] = useState(0)\n\n  useEffect(() =>{\n    setBody([initialPosition])\n    //ゲーム内の時間を管理する\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() =>{\n      setTick(tick => tick +1)\n    },interval)\n\n    return unsubscribe\n  },[difficulty] )\n\n  useEffect(() =>{\n    //positionの Null チェック\n    if (body.length === 0 || status !== GameStatus.playing){\n      return\n    }\n    const canContinue = handleMoving ()\n    if (!canContinue){\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n    }\n  },[tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick +1)\n    }, defaultInterval)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setDirection(Direction.up)\n    setFields(initFields(35, initialPosition))\n  }\n\n  const onChangeDirection = useCallback((newDirection) =>{\n    if(status !== GameStatus.playing){\n      return direction\n    }\n    if(OppositeDirection[direction] === newDirection){\n      return\n    }\n    setDirection(newDirection)\n  },[direction ,status])\n\n  const onChangeDifficulty =useCallback((difficulty) =>{\n    if(status !== GameStatus.init){\n      return\n    }\n    if(difficulty < 1 || difficulty > Difficulty.length){\n      return\n    }\n    setDifficulty(difficulty)\n  }, [status,difficulty])\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n   const handleMoving = () => {\n   const { x, y } = body[0]\n   const delta = Delta[direction]\n   const newPosition ={\n     x : x + delta.x,\n     y : y + delta.y\n   }\n\n   if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)){\n     unsubscribe()\n     return false\n   }\n\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    }else{\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n\n   fields[newPosition.y][newPosition.x] = 'snake'\n   newBody.unshift(newPosition)\n\n   setBody(newBody)\n   setFields(fields)\n   return true\n  }\n\n\n  return (\n    <div className=\"App\">\n      {/* --------------------- */}\n\n      <header className=\"header\">\n        <div className=\"title-container\">\n           <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n         length = {body.length}\n         difficulty={difficulty}\n         onChangeDifficulty = {onChangeDifficulty}\n        />\n      </header>\n\n     {/* ----------------------- */}\n\n      <main className=\"main\">\n        <Field fields = {fields}/>\n      </main>\n\n     {/* ----------------------- */}\n\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop = {onStop}\n          onStart = {onStart}\n          onRestart = {onRestart}\n          />\n        <ManipulationPanel onChange = {onChangeDirection}/>\n      </footer>\n\n     {/* ------------------------ */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}